#!/usr/bin/env bash
#
# Wifi Tools is a collection of common tasks for wireless testing.

source ./lib/logging.sh
source ./lib/wifi.sh

# Globals:
Interface=""

# TODO: 
#  - [ ] make the sleep time configurable
#  - [ ] make the channel list configurable
#  - [ ] make sure the interfave is in monitor mode
#  - [ ] make sure the interface is up

#######################################
# _help - print help message
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   None
# Outputs:
#   help message
#######################################
_help(){
    echo "salt pork"
}

#######################################
# clean_exit - exit cleanly
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   None
# Outputs:
#   None
#######################################
clean_exit(){
    echo ""
    log::info "Exiting..."
    exit 0
}

#######################################
# check_args - check arguments
# Globals:
#   None
# Arguments:
#   $1 - interface
# Returns:
#   None
# Outputs:
#   None
#######################################
check_args(){
    if [[ -z "$1" ]]; then
        log::err "No interface specified"
        wifi::select_interface
        exit 1
    fi
}

#######################################
# channel_hop - hop between channels
# Globals:
#   None
# Arguments:
#   $1 - interface
# Returns:
#   1 - if error setting channel on the interface
# Outputs:
#   None
#######################################
channel_hop(){
    Interface="$1"
    echo "test: $Interface"
    check_args "$Interface"
    wifi::check_mode "$Interface"
    echo "Press Ctrl+C to stop"
    echo "interface: $Interface"
    echo -n "channel: "
    while true; do
        for channel in 01 06 11 02 07 10 03 08 04 09 05
        do
            printf "%s""${channel:0:1}""${channel:1:1}""\b\b"
            iw dev "$Interface" set channel "${channel}" || return 1
            sleep 1
        done
    done
}

#######################################
# main - main function
# Globals:
#   None
# Arguments:
#   $@ - arguments
# Returns:
#   None
# Outputs:
#   None
#######################################
main(){
    log::info "Starting..."
    for arg in $@; do
        case "$arg" in
            -h|--help)
                _help
                exit 0
                ;;
            -d|--debug)
                DEBUG=true
                shift
                ;;
        esac
    done
    case "$1" in
        channel-hop)
            channel_hop "$2"
            ;;
        *)
            _help
            ;;
    esac
}

# trap ctrl-c and call clean_exit()
# may want to do more here in the future
trap 'clean_exit' SIGINT SIGTERM SIGKILL

main "$@"